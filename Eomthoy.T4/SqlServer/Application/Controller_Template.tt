<#@ include file="../SqlServer_DBHelper.tt" #><#    
    //初始化Manager对象 
    var manager = Manager.Create(Host, GenerationEnvironment);  
    foreach (Tables table in tables) { 
        manager.StartNewFile(table.name + "Controller.cs");
		string lowerName = table.name.Substring(0, 1).ToLower() + table.name.Substring(1);
#>
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Linq.Expressions;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Data;
using AutoMapper;
using Newtonsoft.Json;
using NPinyin;
using <#=projectName#>.BLL;
using <#=projectName#>.Common;
using <#=projectName#>.Common.SessionManager;
using <#=projectName#>.Model;
using <#=projectName#>.ServerHost.DTO;
using <#=projectName#>ServerHost.Models.Mix;
using <#=projectName#>ServerHost.Common;

namespace <#=projectName #>ServerHost.Controllers
{
	 public class <#=table.name #>Controller : BaseContrller
    {
        /// <summary>
        /// 根据Id获取对象
        /// </summary>
        /// <param name="query">Id</param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/GetById")]
        public AjaxResult GetById([FromBody] <#=table.name #>QueryDTO query)
        {
            <#=table.name #> model = new <#=table.name #>BLL().GetFristModel(x => x.Id == query.Id);

            if (!string.IsNullOrWhiteSpace(query.KeyWord))
            {
                HandleLog log = new HandleLog();
                log.HandleName = WebSession.UserName;
                log.Content = "查询了表[<#=table.name #>]关键词为" + query.KeyWord + "的记录";
                log.CreateTime = DateTime.Now;
                log.HandleType = 1;
                new HandleLogBLL().Add(log);
            }

            return new AjaxResult(model);
        }
        /// <summary>
        /// 列表获取
        /// </summary>
        /// <param name="query"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/GetList")]
        public AjaxResult GetList([FromBody] <#=table.name #>QueryDTO query)
        {
            List<<#=table.name #>> list = new <#=table.name #>BLL().GetModel(x => true);

            if (!string.IsNullOrWhiteSpace(query.KeyWord))
            {
                HandleLog log = new HandleLog();
                log.HandleName = WebSession.UserName;
                log.Content = "查询了表[<#=table.name #>]关键词为" + query.KeyWord + "的记录";
                log.CreateTime = DateTime.Now;
                log.HandleType = 1;
                new HandleLogBLL().Add(log);
            }

            return new AjaxResult(list);
        }
        /// <summary>
        /// 数据分页
        /// </summary>
        /// <param name="query"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/GetPageList")]
        public PageResult GetPageList([FromBody] <#=table.name #>QueryDTO query)
        {
			string sql = "SELECT *, count(1) over() as Total FROM <#=table.name #> WHERE 1 = 1";
            if (!string.IsNullOrWhiteSpace(query.KeyWord))
            {
				// sql += $" And Name like '%{query.KeyWord}%' ";
                HandleLog log = new HandleLog();
                log.HandleName = WebSession.UserName;
                log.Content = "查询了表[<#=table.name #>]关键词为" + query.KeyWord + "的记录";
                log.CreateTime = DateTime.Now;
                log.HandleType = 1;
                new HandleLogBLL().Add(log);
            }
            sql += $" order by CreateTime desc offset {query.Offset} Rows fetch next {query.Limit} rows only";
            DataTable dt = SqlHelper.ExecuteDataSetText(sql).Tables[0];
            List<<#=table.name #>> rows = DtConversionList<<#=table.name #>>.ConvertToModel(dt).ToList();
            int total = (rows.Count > 0) ? Convert.ToInt32(dt.Rows[0]["Total"]) : 0;
            PageResult result = new PageResult(rows, total, Convert.ToInt32(Math.Ceiling(total * 1.0 / query.Limit)), query.Limit, query.Offset / query.Limit + 1);

            return result;
        }
        /// <summary>
        /// 新增
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/Save")]
        public AjaxResult Save([FromBody] <#=table.name #> model)
        {
            model.CreateTime = DateTime.Now;
            new <#=table.name #>BLL().Add(model);

            HandleLog log = new HandleLog();
            log.HandleName = WebSession.UserName;
            log.Content = "表[<#=table.name #>]新增了一条记录";
            log.CreateTime = DateTime.Now;
            log.HandleType = 1;
            new HandleLogBLL().Add(log);

            return Success("保存成功");
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/Update")]
        public AjaxResult Update([FromBody] <#=table.name #> model)
        {
            new <#=table.name #>BLL().UpdateModel(model);

            HandleLog log = new HandleLog();
            log.HandleName = WebSession.UserName;
            log.Content = "修改了表[<#=table.name #>]Id为" + query.Id + "的记录";
            log.CreateTime = DateTime.Now;
            log.HandleType = 1;
            new HandleLogBLL().Add(log);

            return Success("保存成功");
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="query">Id</param>
        /// <returns></returns>
        [HttpPost]
        [Route("<#=table.name #>/Delete")]
        public AjaxResult Delete([FromBody] <#=table.name #>QueryDTO query)
        {
            new <#=table.name #>BLL().DelBy(x => x.Id == query.Id);

            HandleLog log = new HandleLog();
            log.HandleName = WebSession.UserName;
            log.Content = "删除了表[<#=table.name #>]Id为" + query.Id + "的记录";
            log.CreateTime = DateTime.Now;
            log.HandleType = 1;
            new HandleLogBLL().Add(log);

            return Success("删除成功");
        }
    }
}
<#
        manager.EndBlock();    
    }
    manager.Process(true, true);  
#>